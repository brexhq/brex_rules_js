load("@brex_rules_js//:defs.bzl", "eslint_test")
load("@npm//@bazel/typescript:index.bzl", "ts_library")

ts_library(
    name = "compiler",
    srcs = ["compiler.ts"],
    module_name = "@brex_rules_js/babel-tsc/ts",
    tsconfig = "//:tsconfig.json",
    visibility = ["//visibility:public"],
    deps = [
        ":host",
        ":types",
        "//packages/babel-tsc:config",
        "//packages/babel-tsc:host",
        "//packages/compiler-infra:cache",
        "@npm//@types",
        "@npm//typescript",
    ],
)

ts_library(
    name = "config",
    srcs = ["config.ts"],
    module_name = "@brex_rules_js/babel-tsc/ts",
    tsconfig = "//:tsconfig.json",
    visibility = ["//visibility:public"],
    deps = [
        ":types",
        "//packages/babel-tsc:config",
        "//packages/babel-tsc:host",
        "//packages/compiler-infra:cache",
        "@npm//@types",
        "@npm//typescript",
    ],
)

ts_library(
    name = "host",
    srcs = ["host.ts"],
    module_name = "@brex_rules_js/babel-tsc/ts",
    tsconfig = "//:tsconfig.json",
    visibility = ["//visibility:public"],
    deps = [
        ":types",
        "//packages/babel-tsc:config",
        "//packages/babel-tsc:host",
        "//packages/compiler-infra:cache",
        "@npm//@types",
        "@npm//typescript",
    ],
)

ts_library(
    name = "index",
    srcs = ["index.ts"],
    module_name = "@brex_rules_js/babel-tsc/ts",
    tsconfig = "//:tsconfig.json",
    visibility = ["//visibility:public"],
    deps = [
        ":compiler",
        ":config",
        ":types",
        "@npm//@types",
    ],
)

ts_library(
    name = "types",
    srcs = ["types.ts"],
    module_name = "@brex_rules_js/babel-tsc/ts",
    tsconfig = "//:tsconfig.json",
    visibility = ["//visibility:public"],
    deps = [
        "@npm//@types",
        "@npm//typescript",
    ],
)

eslint_test(
    name = "compiler.lint",
    srcs = [":compiler"],
    config = "//:eslint-config",
)

eslint_test(
    name = "config.lint",
    srcs = [":config"],
    config = "//:eslint-config",
)

eslint_test(
    name = "host.lint",
    srcs = [":host"],
    config = "//:eslint-config",
)

eslint_test(
    name = "index.lint",
    srcs = [":index"],
    config = "//:eslint-config",
)

eslint_test(
    name = "types.lint",
    srcs = [":types"],
    config = "//:eslint-config",
)
